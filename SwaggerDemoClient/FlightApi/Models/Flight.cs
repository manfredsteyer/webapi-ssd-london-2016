// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;
using SwaggerDemoClient.Models;

namespace SwaggerDemoClient.Models
{
    public partial class Flight
    {
        private IList<Booking> _bookings;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Booking> Bookings
        {
            get { return this._bookings; }
            set { this._bookings = value; }
        }
        
        private DateTimeOffset? _date;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? Date
        {
            get { return this._date; }
            set { this._date = value; }
        }
        
        private int? _flightId;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? FlightId
        {
            get { return this._flightId; }
            set { this._flightId = value; }
        }
        
        private string _fromVariable;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string From
        {
            get { return this._fromVariable; }
            set { this._fromVariable = value; }
        }
        
        private string _to;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string TO
        {
            get { return this._to; }
            set { this._to = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Flight class.
        /// </summary>
        public Flight()
        {
            this.Bookings = new LazyList<Booking>();
        }
        
        /// <summary>
        /// Initializes a new instance of the Flight class with required
        /// arguments.
        /// </summary>
        public Flight(string fromParameter, string to)
            : this()
        {
            if (fromParameter == null)
            {
                throw new ArgumentNullException("fromParameter");
            }
            if (to == null)
            {
                throw new ArgumentNullException("to");
            }
            this.From = fromParameter;
            this.TO = to;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken bookingsSequence = ((JToken)inputObject["bookings"]);
                if (bookingsSequence != null && bookingsSequence.Type != JTokenType.Null)
                {
                    foreach (JToken bookingsValue in ((JArray)bookingsSequence))
                    {
                        Booking booking = new Booking();
                        booking.DeserializeJson(bookingsValue);
                        this.Bookings.Add(booking);
                    }
                }
                JToken dateValue = inputObject["date"];
                if (dateValue != null && dateValue.Type != JTokenType.Null)
                {
                    this.Date = ((DateTimeOffset)dateValue);
                }
                JToken flightIdValue = inputObject["flightId"];
                if (flightIdValue != null && flightIdValue.Type != JTokenType.Null)
                {
                    this.FlightId = ((int)flightIdValue);
                }
                JToken fromValue = inputObject["from"];
                if (fromValue != null && fromValue.Type != JTokenType.Null)
                {
                    this.From = ((string)fromValue);
                }
                JToken toValue = inputObject["to"];
                if (toValue != null && toValue.Type != JTokenType.Null)
                {
                    this.TO = ((string)toValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type Flight
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.From == null)
            {
                throw new ArgumentNullException("From");
            }
            if (this.TO == null)
            {
                throw new ArgumentNullException("TO");
            }
            JArray bookingsSequence = null;
            if (this.Bookings != null)
            {
                if (this.Bookings is ILazyCollection<Booking> == false || ((ILazyCollection<Booking>)this.Bookings).IsInitialized)
                {
                    bookingsSequence = new JArray();
                    outputObject["bookings"] = bookingsSequence;
                    foreach (Booking bookingsItem in this.Bookings)
                    {
                        if (bookingsItem != null)
                        {
                            bookingsSequence.Add(bookingsItem.SerializeJson(null));
                        }
                    }
                }
            }
            if (this.Date != null)
            {
                outputObject["date"] = this.Date.Value;
            }
            if (this.FlightId != null)
            {
                outputObject["flightId"] = this.FlightId.Value;
            }
            if (this.From != null)
            {
                outputObject["from"] = this.From;
            }
            if (this.TO != null)
            {
                outputObject["to"] = this.TO;
            }
            return outputObject;
        }
    }
}
